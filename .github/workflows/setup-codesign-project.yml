name: Setup Co-Design Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: "Name of the solution project"
        required: true
        default: "New Solution Project"
      project_type:
        description: "Type of solution project"
        required: false
        default: "Earth Observation Solution"

jobs:
  setup_codesign_project:
    runs-on: ubuntu-latest
    name: Create Co-Design Project Structure
    permissions:
      issues: write
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Project Setup Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectName = '${{ github.event.inputs.project_name }}';
            const projectType = '${{ github.event.inputs.project_type }}';
            const today = new Date().toLocaleDateString();
            
            const setupBody = `## üöÄ Project Setup for ${projectName}

            ### Project Information
            - **Project Name:** ${projectName}
            - **Project Type:** ${projectType}
            - **Setup Date:** ${today}

            ### Initial Setup Tasks
            - [ ] Identify stakeholder agencies and contacts
            - [ ] Develop co-design timeline
            - [ ] Allocate team resources and roles
            - [ ] Plan first stakeholder touchpoint
            - [ ] Set up communication channels
            - [ ] Review and customize co-design templates

            ### SEP Team Coordination
            - [ ] Assign co-design lead
            - [ ] Schedule CoDesign 101 working session
            - [ ] Complete stakeholder worksheet
            - [ ] Integrate with SEP section of project plan

            ### Next Steps
            1. Complete stakeholder identification using HLS-LL format
            2. Schedule Touchpoint 1: Solution Validation
            3. Begin assessment phase activities

            **Assigned to:** Co-design Lead
            **Due Date:** Within 2 weeks of project start`;

            const setupIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[SETUP] ${projectName} - Project Initialization`,
              body: setupBody,
              labels: ['setup', 'planning', 'co-design', 'high-priority']
            });

            console.log(`Created setup issue #${setupIssue.data.number}`);

      - name: Create First Touchpoint Planning Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectName = '${{ github.event.inputs.project_name }}';
            
            const touchpointBody = `## ü§ù Touchpoint 1: Solution Validation

            **Project:** ${projectName}
            **Touchpoint Type:** Solution Validation
            **Phase:** Assessment
            **Timeline:** After solution prioritization

            ### üìä Stakeholder Information
            **Primary Agencies:**
            - [ ] [Agency Name] - [Contact Name, Role, Email]
            - [ ] [Agency Name] - [Contact Name, Role, Email]

            **Expected Participation:** [Number] stakeholders

            ### üéØ Objectives & Outcomes
            **Primary Objectives:**
            - [ ] Validate notional solution concept with agencies
            - [ ] Collect initial feedback on solution approach
            - [ ] Confirm understanding of agency needs
            - [ ] Identify potential implementation challenges

            **Success Criteria:**
            - [ ] At least 75% of target agencies participate
            - [ ] Clear validation or concerns about solution direction
            - [ ] Updated requirements based on feedback

            **Stakeholder Value Proposition:**
            **What agencies gain:** Direct input into solution concept before development begins
            **Time commitment:** 60-90 minutes for presentation and feedback session
            **Impact on workflow:** Opportunity to shape solution that will improve their operations

            ### üìã Preparation Checklist
            **Pre-Touchpoint Activities:**
            - [ ] Stakeholder contact list updated and verified
            - [ ] Solution concept presentation prepared (agency-friendly language)
            - [ ] Agenda drafted and reviewed with SEP team
            - [ ] Meeting platform tested
            - [ ] Background materials prepared for stakeholders
            - [ ] Calendar invitations sent with clear agenda
            - [ ] Internal team briefed on objectives and roles

            ### üîÑ Next Steps
            **Immediate Actions:**
            - [ ] Schedule and conduct touchpoint
            - [ ] Document feedback and outcomes
            - [ ] Update solution concept based on input
            - [ ] Plan Touchpoint 2: Agency Feedback Survey`;

            const touchpointIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[TOUCHPOINT] ${projectName} - Solution Validation (TP1)`,
              body: touchpointBody,
              labels: ['touchpoint', 'tp1-solution-validation', 'stakeholder-engagement', 'planning']
            });

            console.log(`Created touchpoint issue #${touchpointIssue.data.number}`);

      - name: Create CoDesign 101 Working Session Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectName = '${{ github.event.inputs.project_name }}';
            
            const workingSessionBody = `## üíº CoDesign 101 Working Session

            **Project:** ${projectName}
            **Session Type:** CoDesign 101
            **Session Number:** WS1
            **Timeline:** Pre-AtP DG (Authority to Proceed Decision Gate)

            ### üéØ Session Objectives
            **Primary Purpose:**
            Establish the co-design framework for ${projectName}, identify the project team co-design lead, and develop the stakeholder engagement strategy.

            **Expected Outcomes:**
            - [ ] Solution project team co-design lead identified and confirmed
            - [ ] Co-design principles and methodology understood by team
            - [ ] Stakeholder engagement strategy developed with timeline
            - [ ] Communication protocols established with SEP team
            - [ ] Integration plan for SEP section of project plan created

            ### üë• Participants
            **Internal Team:**
            - [ ] [Project Lead Name] - Project Lead - Overall coordination
            - [ ] [Technical Lead Name] - Technical Lead - Solution architecture
            - [ ] [Team Member Name] - [Role] - [Responsibility in session]

            **SEP Team:**
            - [ ] SEP Deputy - Stakeholder engagement strategy guidance
            - [ ] CoDesign Lead - Methodology and best practices facilitation
            - [ ] Project Coordinator - Process facilitation and documentation

            ### üìã Pre-Session Preparation Checklist
            - [ ] Session agenda prepared with detailed timing
            - [ ] SNWG co-design methodology materials compiled
            - [ ] Stakeholder identification worksheet prepared
            - [ ] Project timeline template ready for completion
            - [ ] SEP integration guidelines reviewed
            - [ ] Meeting platform tested (Zoom/Teams)
            - [ ] Invitations sent with agenda and background materials

            ### üîÑ Follow-up Actions
            **Immediate (Within 48 hours):**
            - [ ] Send session summary to all participants
            - [ ] Update project plan with co-design strategy
            - [ ] Distribute completed worksheets and templates
            - [ ] Schedule Stakeholder Review & Worksheet working session`;

            const workingSessionIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[WS] ${projectName} - CoDesign 101 Working Session`,
              body: workingSessionBody,
              labels: ['working-session', 'co-design', 'ws1', 'sep-coordination']
            });

            console.log(`Created working session issue #${workingSessionIssue.data.number}`);

      - name: Create Initial Milestone Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectName = '${{ github.event.inputs.project_name }}';
            
            const milestoneBody = `## üöÄ Milestone: Co-Design Framework Established

            **Project:** ${projectName}
            **Milestone Type:** Process Establishment
            **Target Date:** Within 4 weeks of project initiation

            ### üéØ Milestone Overview
            **Description:**
            This milestone marks the successful establishment of the co-design framework for ${projectName}, including stakeholder identification, team structure, and initial engagement strategy.

            **Stakeholder Impact:**
            Agencies will have clear understanding of how they can engage with the solution development process and what value they will receive from participation.

            ### üìä Completion Criteria
            **Framework Components:**
            - [ ] Co-design lead identified and onboarded
            - [ ] Stakeholder contact list completed and verified
            - [ ] Engagement timeline established with all 8 touchpoints planned
            - [ ] Communication protocols established
            - [ ] SEP team coordination activated

            **Documentation Status:**
            - [ ] Co-design strategy integrated into project plan
            - [ ] Stakeholder worksheet completed
            - [ ] GitHub repository configured with templates and automation
            - [ ] Initial touchpoint materials prepared

            ### üìà Success Metrics
            **Process Metrics:**
            - Co-design lead successfully identified and confirmed
            - 100% of working sessions completed as planned
            - All stakeholder agencies contacted and engagement confirmed
            - SEP team integration fully activated

            ### üîÑ Next Steps
            **Immediate Next Milestone:**
            - **Type:** First Touchpoint Execution
            - **Target Date:** 2-4 weeks after framework establishment
            - **Key Focus:** Solution validation with agency stakeholders

            **Critical Path Items:**
            - [ ] Execute Touchpoint 1: Solution Validation
            - [ ] Collect and analyze initial stakeholder feedback
            - [ ] Refine solution concept based on agency input
            - [ ] Plan Touchpoint 2: Agency Feedback Survey`;

            const milestoneIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[MILESTONE] ${projectName} - Co-Design Framework Established`,
              body: milestoneBody,
              labels: ['milestone', 'co-design', 'framework-setup', 'stakeholder-impact']
            });

            console.log(`Created milestone issue #${milestoneIssue.data.number}`);

      - name: Summary
        run: |
          echo "üéâ Co-Design Project Setup Complete!"
          echo ""
          echo "Created issues for ${{ github.event.inputs.project_name }}:"
          echo "‚úÖ Project Setup and Initialization"
          echo "‚úÖ Touchpoint 1: Solution Validation Planning"
          echo "‚úÖ CoDesign 101 Working Session"
          echo "‚úÖ Co-Design Framework Milestone"
          echo ""
          echo "Your professional co-design pipeline is ready! üöÄ"

    - name: Create Project Board Automatically
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectName = '${{ github.event.inputs.project_name }}';
            
            try {
              // Create the project
              const project = await github.rest.projects.createForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: `${projectName} Co-Design Pipeline`,
                body: `Professional co-design project board for ${projectName} stakeholder engagement and solution development.`
              });

              console.log(`Created project: ${project.data.name} (ID: ${project.data.id})`);

              // Create columns
              const columns = [
                'üìã Planning & Preparation',
                'ü§ù Active Stakeholder Engagement', 
                'üîÑ In Development',
                '‚úÖ Stakeholder Review',
                'üéØ Complete'
              ];

              const createdColumns = [];
              for (const columnName of columns) {
                const column = await github.rest.projects.createColumn({
                  project_id: project.data.id,
                  name: columnName
                });
                createdColumns.push(column.data);
                console.log(`Created column: ${columnName}`);
              }

              // Get the setup issues we just created
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'setup,planning,co-design',
                state: 'open',
                per_page: 10
              });

              // Add issues to the first column (Planning & Preparation)
              const planningColumn = createdColumns[0];
              for (const issue of issues.data) {
                if (issue.title.includes(projectName)) {
                  await github.rest.projects.createCard({
                    column_id: planningColumn.id,
                    content_id: issue.id,
                    content_type: 'Issue'
                  });
                  console.log(`Added issue #${issue.number} to project board`);
                }
              }

              // Create success notification issue
              const successBody = `## üéâ Project Board Created Successfully!

              ### ‚úÖ Automated Setup Complete

              **Project Board:** [${projectName} Co-Design Pipeline](${project.data.html_url})

              **What was created:**
              - ‚úÖ Project board with 5 professional columns
              - ‚úÖ 4 starter issues added to "Planning & Preparation"
              - ‚úÖ Professional co-design workflow ready

              ### üöÄ Next Steps

              1. **[Visit your project board](${project.data.html_url})** to see the organized workflow
              2. **Review the 4 starter issues** and assign team members
              3. **Begin with the CoDesign 101 working session**
              4. **Share the project board URL** with stakeholders

              ### üìä Your Professional Co-Design System

              **Project Board URL:** ${project.data.html_url}

              **Ready for:**
              - Stakeholder engagement and transparency
              - Professional project management
              - SEP team coordination
              - Agency collaboration

              **This notification can be closed - your system is ready! üöÄ**`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üéâ SUCCESS: ${projectName} Co-Design Pipeline Created`,
                body: successBody,
                labels: ['success', 'setup-complete', 'project-ready']
              });

            } catch (error) {
              console.error('Failed to create project board:', error);
              
              // Create fallback reminder issue if automation fails
              const fallbackBody = `## ‚ö†Ô∏è Automated Project Board Creation Failed

              **The starter issues were created successfully, but automated project board creation encountered an error.**

              ### üìã Manual Setup Required (5 minutes)

              **Please follow these steps to complete setup:**

              1. **Go to [Projects tab](../../projects)**
              2. **Click "Create new project"**
              3. **Name it:** \`${projectName} Co-Design Pipeline\`
              4. **Set up 5 columns** as described in the setup guide
              5. **Add the 4 starter issues** to the project board

              **Error Details:** ${error.message}

              **This is normal - GitHub's project API has permission restrictions in some environments.**`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üîß MANUAL SETUP NEEDED: ${projectName} Project Board`,
                body: fallbackBody,
                labels: ['setup-reminder', 'manual-action-required']
              });
            }
